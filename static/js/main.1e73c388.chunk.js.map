{"version":3,"sources":["context/gameContext.tsx","colors/colores.tsx","Components/Header/HeaderComponent.tsx","Components/GameButton/HandButton.tsx","Components/RockPaperScissor/ResultComponent.tsx","Components/RockPaperScissor/GameComponent.tsx","Pages/HomePage.tsx","App.tsx","index.tsx"],"names":["GameContext","createContext","GameProvider","children","useState","score","setScore","onGame","setOnGame","yourPick","setYourPick","computerPick","setComputerPick","winner","setWinner","useEffect","getScore","localStorage","setItem","toString","scoreGame","getItem","parseInt","randomNumber","min","max","Math","floor","random","Provider","value","editPointScore","result","gameStart","e","pickComputer","resultGame","youPick","compPick","restartGame","colores","Header","styled","header","HeaderTexts","div","HeaderTitle","h1","HeaderScoreBoard","HeaderComponent","useContext","Hand","props","color","HandButton","bg1","bg2","background","setBackground","name","style","gridArea","borderColor","boxShadow","onClick","src","alt","ResultComponent","waitBeforeShow","isShown","setIsShown","delayTime","setTimeout","clearTimeout","Container","HandsContainer","GameContainer","GamePick","GamePickTitle","h2","ResultContainer","PlayAgainBtn","button","GameComponent","className","Button","RulesModal","Modal","ModalTitle","ModalFigure","figure","ModalImage","img","ModalClose","HomePage","rulesModal","setRulesModal","AppState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e73c388.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { GamePickType } from \"./gameInterface\";\r\n\r\ntype GameContextProps = {\r\n    score: number;\r\n    getScore: () => number;\r\n    editPointScore: (result: \"win\" | \"lose\" | \"draw\" | \"none\") => void;\r\n    gameStart: (\r\n        e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        value: GamePickType\r\n    ) => void;\r\n    yourPick: GamePickType;\r\n    onGame: boolean;\r\n    computerPick: GamePickType;\r\n    resultGame: (youPick: GamePickType, compPick: GamePickType) => void;\r\n    winner: \"draw\" | \"win\" | \"lose\" | \"none\";\r\n    restartGame: () => void;\r\n};\r\n\r\nexport const GameContext = createContext({} as GameContextProps);\r\n\r\nexport const GameProvider = ({ children }: any) => {\r\n    const [score, setScore] = useState(0);\r\n\r\n    const [onGame, setOnGame] = useState<boolean>(false);\r\n\r\n    const [yourPick, setYourPick] = useState<GamePickType>(\"none\");\r\n    const [computerPick, setComputerPick] = useState<GamePickType>(\"none\");\r\n\r\n    const [winner, setWinner] = useState<\"win\" | \"lose\" | \"draw\" | \"none\">(\r\n        \"none\"\r\n    );\r\n\r\n    useEffect(() => {\r\n        getScore();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"scoreGame\", score.toString());\r\n    }, [score]);\r\n\r\n    const getScore = () => {\r\n        const scoreGame = localStorage.getItem(\"scoreGame\");\r\n        if (scoreGame) {\r\n            setScore(parseInt(scoreGame));\r\n            return parseInt(scoreGame);\r\n        } else {\r\n            return score;\r\n        }\r\n    };\r\n\r\n    const editPointScore = (result: \"win\" | \"lose\" | \"draw\" | \"none\") => {\r\n        if (result === \"win\") {\r\n            setScore(score + 1);\r\n        } else if (result === \"lose\") {\r\n            if (score > 0) {\r\n                setScore(score - 1);\r\n            }\r\n        }\r\n    };\r\n\r\n    const gameStart = (\r\n        e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n        value: GamePickType\r\n    ) => {\r\n        // console.log(value);\r\n        setOnGame(true);\r\n        setYourPick(value);\r\n        let pickComputer = randomNumber(1, 3);\r\n        if (pickComputer === 1) {\r\n            setComputerPick(\"rock\");\r\n        } else if (pickComputer === 2) {\r\n            setComputerPick(\"paper\");\r\n        } else if (pickComputer === 3) {\r\n            setComputerPick(\"scissors\");\r\n        }\r\n    };\r\n\r\n    const randomNumber = (min: number, max: number) => {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    };\r\n\r\n    const resultGame = (youPick: GamePickType, compPick: GamePickType) => {\r\n        if (youPick === \"paper\") {\r\n            if (compPick === \"rock\") {\r\n                setWinner(\"win\");\r\n            } else if (compPick === \"scissors\") {\r\n                setWinner(\"lose\");\r\n            } else if (compPick === \"paper\") {\r\n                setWinner(\"draw\");\r\n            }\r\n        } else if (youPick === \"rock\") {\r\n            if (compPick === \"rock\") {\r\n                setWinner(\"draw\");\r\n            } else if (compPick === \"scissors\") {\r\n                setWinner(\"win\");\r\n            } else if (compPick === \"paper\") {\r\n                setWinner(\"lose\");\r\n            }\r\n        } else if (youPick === \"scissors\") {\r\n            if (compPick === \"rock\") {\r\n                setWinner(\"lose\");\r\n            } else if (compPick === \"scissors\") {\r\n                setWinner(\"draw\");\r\n            } else if (compPick === \"paper\") {\r\n                setWinner(\"win\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const restartGame = () => {\r\n        setOnGame(false);\r\n        setYourPick(\"none\");\r\n        setComputerPick(\"none\");\r\n        setWinner(\"none\");\r\n    };\r\n    //TODO: En reglas agregar Win: +1 punto Lose: - 1 point and draw: nothing happens\r\n    //TODO: result game en el game component\r\n\r\n    return (\r\n        <GameContext.Provider\r\n            value={{\r\n                score,\r\n                editPointScore,\r\n                getScore,\r\n                gameStart,\r\n                onGame,\r\n                yourPick,\r\n                computerPick,\r\n                resultGame,\r\n                winner,\r\n                restartGame,\r\n            }}\r\n        >\r\n            {children}\r\n        </GameContext.Provider>\r\n    );\r\n};\r\n","export const colores = {\r\n    textDark:\"hsl(229, 25%, 31%)\",\r\n    textScore:\"hsl(229, 64%, 46%)\",\r\n    headerOutline:\"hsl(217, 16%, 45%)\",\r\n\r\n    borderscissors1: \"hsl(39, 89%, 49%)\",\r\n    borderscissors2: \"hsl(40, 84%, 53%, 0.45)\",\r\n\r\n    borderRock1: \"hsl(349, 71%, 52%)\",\r\n    borderRock2: \"hsl(349, 70%, 56%, 0.45)\",\r\n\r\n    borderPaper1: \"hsl(230, 89%, 62%)\",\r\n    borderPaper2: \"hsl(230, 89%, 65%, 0.45)\",\r\n}","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colores } from \"../../colors/colores\";\r\nimport { GameContext } from \"../../context/gameContext\";\r\n\r\nconst Header = styled.header`\r\n    border: 2.5px solid ${colores.headerOutline};\r\n    border-radius: 10px;\r\n    -moz-outline-radius: 28px;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    margin-top: 20px;\r\n    width: 55%;\r\n\r\n    @media screen and (max-width: 768px) {\r\n        width: 80%;\r\n    }\r\n    @media screen and (max-width: 500px) {\r\n        width: 95%;\r\n    }\r\n`;\r\n\r\nconst HeaderTexts = styled.div`\r\n    color: #fff;\r\n`;\r\n\r\nconst HeaderTitle = styled.h1`\r\n    font-weight: 600;\r\n    text-transform: uppercase;\r\n    max-width: 145px;\r\n\r\n    @media screen and (max-width: 500px) {\r\n        font-size: 1.9rem;\r\n        padding: 10px;\r\n    }\r\n`;\r\n\r\nconst HeaderScoreBoard = styled.div`\r\n    min-width: 100px;\r\n    width: 100%;\r\n    max-width: 150px;\r\n    background-color: #fafafa;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    border-radius: 10px;\r\n\r\n    & > p {\r\n        color: ${colores.textScore};\r\n        font-size: 1.3rem;\r\n        letter-spacing: 1px;\r\n        text-transform: uppercase;\r\n    }\r\n    & > h3 {\r\n        font-size: 3.5rem;\r\n        color: ${colores.textDark};\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        max-width: 120px;\r\n        min-height: 110px;\r\n\r\n        & > p {\r\n            font-size: 1.5em;\r\n        }\r\n\r\n        & > h3 {\r\n            font-size: 3em;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const HeaderComponent = () => {\r\n    const { score } = useContext(GameContext);\r\n\r\n    return (\r\n        <Header>\r\n            <HeaderTexts>\r\n                <HeaderTitle>Rock Paper Scissors</HeaderTitle>\r\n            </HeaderTexts>\r\n            <HeaderScoreBoard>\r\n                <p>score</p>\r\n                <h3>{score}</h3>\r\n            </HeaderScoreBoard>\r\n        </Header>\r\n    );\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colores } from \"../../colors/colores\";\r\nimport { GamePickType } from \"../../context/gameInterface\";\r\n\r\ninterface HandButtonProps {\r\n    name: GamePickType;\r\n    // bg1: string;\r\n    // bg2: string;\r\n    onClick?: React.MouseEventHandler<HTMLDivElement> | undefined;\r\n}\r\n\r\nconst Hand = styled.div`\r\n    border-radius: 50%;\r\n    width: 11em;\r\n    height: 11em;\r\n    /* box-sizing: content-box; */\r\n    display: grid;\r\n    place-items: center;\r\n    background-color: #fff;\r\n    cursor: pointer;\r\n    border-width: 25px;\r\n    border-style: solid;\r\n\r\n    &:hover {\r\n        filter: drop-shadow(0 0 20px ${(props) => props.color});\r\n    }\r\n\r\n    @media screen and (max-width: 500px) {\r\n        width: 7em;\r\n        height: 7em;\r\n        border-width: 10px;\r\n    }\r\n`;\r\n\r\nexport const HandButton = (props: HandButtonProps) => {\r\n    const initialState = {\r\n        bg1: \"\",\r\n        bg2: \"\",\r\n    };\r\n    const [background, setBackground] = useState(initialState);\r\n\r\n    useEffect(() => {\r\n        switch (props.name) {\r\n            case \"rock\":\r\n                setBackground({\r\n                    bg1: colores.borderRock1,\r\n                    bg2: colores.borderRock2,\r\n                });\r\n                break;\r\n\r\n            case \"paper\":\r\n                setBackground({\r\n                    bg1: colores.borderPaper1,\r\n                    bg2: colores.borderPaper2,\r\n                });\r\n                break;\r\n\r\n            case \"scissors\":\r\n                setBackground({\r\n                    bg1: colores.borderscissors1,\r\n                    bg2: colores.borderscissors2,\r\n                });\r\n                break;\r\n\r\n            default:\r\n                setBackground({\r\n                    bg1: \"\",\r\n                    bg2: \"\",\r\n                });\r\n                break;\r\n        }\r\n    }, [props.name]);\r\n\r\n    return (\r\n        <>\r\n            {props.name === \"none\" ? null : (\r\n                <Hand\r\n                    color={background.bg1}\r\n                    style={{\r\n                        gridArea: props.name,\r\n                        borderColor: background.bg1,\r\n                        boxShadow: ` inset 0 6px rgba(0, 0, 0, 0.2), 0 6px ${background.bg2}`,\r\n                    }}\r\n                    onClick={props.onClick}\r\n                >\r\n                    <img\r\n                        src={`./assets/images/icon-${props.name}.svg`}\r\n                        alt=\"\"\r\n                    />\r\n                </Hand>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\n\r\ninterface Props {\r\n    children: any;\r\n    waitBeforeShow?: number;\r\n}\r\n\r\nconst ResultComponent = ({ children, waitBeforeShow = 500 }: Props) => {\r\n    const [isShown, setIsShown] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const delayTime = setTimeout(() => {\r\n            setIsShown(true);\r\n        }, waitBeforeShow);\r\n\r\n        return () => {\r\n            clearTimeout(delayTime);\r\n        };\r\n    }, [waitBeforeShow]);\r\n\r\n    return isShown ? children : null;\r\n};\r\n\r\nexport default ResultComponent;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { GameContext } from \"../../context/gameContext\";\r\nimport { HandButton } from \"../GameButton/HandButton\";\r\nimport ResultComponent from \"./ResultComponent\";\r\n\r\nconst Container = styled.div`\r\n    width: 80%;\r\n    @media (max-width: 500px) {\r\n        width: 95%;\r\n    }\r\n`;\r\n\r\nconst HandsContainer = styled.div`\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    grid-template-areas:\r\n        \"paper scissors\"\r\n        \"rock rock\";\r\n    place-items: center;\r\n    height: 39em;\r\n    width: 39em;\r\n    margin: 0 auto;\r\n    gap: 50px;\r\n    padding-top: 2em;\r\n    z-index: 1;\r\n    background-image: url(\"./assets/images/bg-triangle.svg\");\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    /* background-size: contain; */\r\n\r\n    @media (max-width: 500px) {\r\n        width: 100%;\r\n        height: 430px;\r\n        padding-top: 0;\r\n    }\r\n`;\r\n\r\nconst GameContainer = styled.div`\r\n    color: #fff;\r\n    display: flex;\r\n    /* border: 1px solid red; */\r\n    height: 60vh;\r\n    margin-top: 2em;\r\n    justify-content: space-evenly;\r\n\r\n    @media (max-width: 500px) {\r\n        flex-wrap: wrap;\r\n    }\r\n`;\r\n\r\nconst GamePick = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 30px;\r\n\r\n    @media (max-width: 500px) {\r\n        z-index: 3;\r\n        min-width: 40%;\r\n    }\r\n`;\r\n\r\nconst GamePickTitle = styled.h2`\r\n    font-weight: normal;\r\n    letter-spacing: 1.2px;\r\n    z-index: 1;\r\n`;\r\n\r\nconst ResultContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    gap: 20px;\r\n    z-index: 1;\r\n    text-transform: uppercase;\r\n\r\n    & > h2 {\r\n        font-size: 3.2em;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        order: 1;\r\n\r\n        & > h2 {\r\n            font-weight: 600;\r\n            font-size: 3.5rem;\r\n        }\r\n    }\r\n`;\r\n\r\nconst PlayAgainBtn = styled.button`\r\n    background-color: #f1f1f1;\r\n    color: red;\r\n    padding: 12px 40px;\r\n    font-size: 1em;\r\n    font-weight: 600;\r\n    letter-spacing: 2px;\r\n    text-transform: uppercase;\r\n    border: none;\r\n    border-radius: 8px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        filter: drop-shadow(0 0 15px rgb(255, 91, 91));\r\n    }\r\n`;\r\n\r\n// const GameHousePick = styled.div``;\r\n\r\nexport const GameComponent = () => {\r\n    const {\r\n        onGame,\r\n        yourPick,\r\n        gameStart,\r\n        computerPick,\r\n        resultGame,\r\n        winner,\r\n        editPointScore,\r\n        restartGame,\r\n    } = useContext(GameContext);\r\n\r\n    useEffect(() => {\r\n        resultGame(yourPick, computerPick);\r\n        // eslint-disable-next-line\r\n    }, [computerPick]);\r\n\r\n    useEffect(() => {\r\n        // console.log(winner);\r\n        editPointScore(winner);\r\n        // eslint-disable-next-line\r\n    }, [winner]);\r\n\r\n    return (\r\n        <Container>\r\n            {!onGame ? (\r\n                <HandsContainer>\r\n                    <HandButton\r\n                        name=\"paper\"\r\n                        onClick={(e) => {\r\n                            gameStart(e, \"paper\");\r\n                        }}\r\n                    />\r\n                    <HandButton\r\n                        name=\"rock\"\r\n                        onClick={(e) => {\r\n                            gameStart(e, \"rock\");\r\n                        }}\r\n                    />\r\n                    <HandButton\r\n                        name=\"scissors\"\r\n                        onClick={(e) => {\r\n                            gameStart(e, \"scissors\");\r\n                        }}\r\n                    />\r\n                </HandsContainer>\r\n            ) : (\r\n                <GameContainer>\r\n                    <GamePick>\r\n                        <GamePickTitle>You Picked</GamePickTitle>\r\n                        {/* {(yourPick) && <HandButton name={yourPick} />} */}\r\n                        <div\r\n                            className={\r\n                                !onGame\r\n                                    ? \"notGaming\"\r\n                                    : winner === \"draw\"\r\n                                    ? \"\"\r\n                                    : winner === \"win\"\r\n                                    ? \"winner\"\r\n                                    : \"\"\r\n                            }\r\n                        >\r\n                            <HandButton name={yourPick} />\r\n                        </div>\r\n                    </GamePick>\r\n                    <ResultComponent waitBeforeShow={400}>\r\n                        <ResultContainer>\r\n                            <h2>You {winner}</h2>\r\n                            <PlayAgainBtn onClick={(e) => restartGame()}>\r\n                                Play Again\r\n                            </PlayAgainBtn>\r\n                        </ResultContainer>\r\n                    </ResultComponent>\r\n                    <GamePick>\r\n                        <GamePickTitle>The House Picked</GamePickTitle>\r\n                        <div\r\n                            className={\r\n                                !onGame\r\n                                    ? \"notGaming\"\r\n                                    : winner === \"draw\"\r\n                                    ? \"\"\r\n                                    : winner === \"win\"\r\n                                    ? \"\"\r\n                                    : \"winner\"\r\n                            }\r\n                        >\r\n                            <HandButton name={computerPick} />\r\n                        </div>\r\n                    </GamePick>\r\n                </GameContainer>\r\n            )}\r\n        </Container>\r\n    );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { colores } from \"../colors/colores\";\r\nimport { HeaderComponent } from \"../Components/Header/HeaderComponent\";\r\nimport { GameComponent } from \"../Components/RockPaperScissor/GameComponent\";\r\n\r\nconst Container = styled.div`\r\n    width: 100vw;\r\n    height: 100vh;\r\n    /* background-image: radial-gradient(circle, var(--background-color)); */\r\n    background: hsl(214, 47%, 23%);\r\n    background: -webkit-radial-gradient(\r\n        top,\r\n        hsl(214, 47%, 23%),\r\n        hsl(237, 49%, 15%)\r\n    );\r\n    background: -moz-radial-gradient(\r\n        top,\r\n        hsl(214, 47%, 23%),\r\n        hsl(237, 49%, 15%)\r\n    );\r\n    background: radial-gradient(\r\n        to bottom,\r\n        hsl(214, 47%, 23%),\r\n        hsl(237, 49%, 15%)\r\n    );\r\n    position: relative;\r\n    overflow: hidden;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: column;\r\n\r\n    @media (max-width: 500px) {\r\n        justify-content: flex-start;\r\n        gap: 1em;\r\n    }\r\n`;\r\n\r\nconst Button = styled.button`\r\n    position: absolute;\r\n    bottom: 20px;\r\n    right: 25px;\r\n    background-color: inherit;\r\n    color: #fff;\r\n    opacity: 0.8;\r\n    padding: 7px 30px;\r\n    border: 1px solid #fff;\r\n    border-radius: 8px;\r\n    letter-spacing: 0.5px;\r\n    cursor: pointer;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n    &:active {\r\n        opacity: 0.8;\r\n    }\r\n\r\n    @media (max-width: 500px) {\r\n        position: relative;\r\n        bottom: 0;\r\n        right: 0;\r\n        margin-top: auto;\r\n        margin-bottom: auto;\r\n        height: 40px;\r\n        width: 120px;\r\n        font-size: 1em;\r\n    }\r\n`;\r\n\r\nconst RulesModal = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: rgba(0, 0, 0, 0.6);\r\n    z-index: 9999;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\n\r\nconst Modal = styled.div`\r\n    width: 50%;\r\n    height: 50%;\r\n    max-width: 420px;\r\n    max-height: 420px;\r\n    background-color: #fff;\r\n    border-radius: 13px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    padding: 20px;\r\n    gap: 30px;\r\n    position: relative;\r\n\r\n    @media (max-width: 500px) {\r\n        width: 100%;\r\n        height: 100%;\r\n        max-width: none;\r\n        max-height: none;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border-radius: 0;\r\n    }\r\n`;\r\n\r\nconst ModalTitle = styled.h2`\r\n    text-transform: uppercase;\r\n    letter-spacing: 0.8px;\r\n    color: ${colores.textDark};\r\n    font-size: 1.8rem;\r\n    font-weight: 700;\r\n`;\r\n\r\nconst ModalFigure = styled.figure`\r\n    width: 85%;\r\n    height: 85%;\r\n    max-width: 400px;\r\n    max-height: 400px;\r\n    align-self: center;\r\n`;\r\n\r\nconst ModalImage = styled.img`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: block;\r\n    margin: 0 auto;\r\n    object-fit: contain;\r\n`;\r\n\r\nconst ModalClose = styled.img`\r\n    position: absolute;\r\n    right: 25px;\r\n    top: 27px;\r\n\r\n    cursor: pointer;\r\n    @media (max-width: 500px) {\r\n        position: relative;\r\n        top: 0;\r\n        right: 0;\r\n    }\r\n`;\r\n\r\nexport const HomePage = () => {\r\n    /* <img src=\"./assets/images/image-rules.svg\" /> */\r\n\r\n    const [rulesModal, setRulesModal] = useState(false);\r\n\r\n    const btnRules = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n        setRulesModal(!rulesModal);\r\n    };\r\n\r\n    const closeRulesModal = (\r\n        e: React.MouseEvent<HTMLImageElement, MouseEvent>\r\n    ) => {\r\n        setRulesModal(false);\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <HeaderComponent />\r\n            <GameComponent />\r\n            {rulesModal && (\r\n                <RulesModal>\r\n                    <Modal>\r\n                        <ModalTitle>Rules</ModalTitle>\r\n                        <ModalFigure>\r\n                            <ModalImage src=\"./assets/images/image-rules.svg\" />\r\n                        </ModalFigure>\r\n                        <ModalClose\r\n                            onClick={closeRulesModal}\r\n                            src=\"./assets/images/icon-close.svg\"\r\n                        />\r\n                    </Modal>\r\n                </RulesModal>\r\n            )}\r\n            <Button onClick={btnRules}>RULES</Button>\r\n        </Container>\r\n    );\r\n};\r\n","import React from \"react\";\nimport { GameProvider } from \"./context/gameContext\";\nimport { HomePage } from \"./Pages/HomePage\";\n\nconst AppState = ({ children }: any) => {\n    return <GameProvider>{children}</GameProvider>;\n};\n\nconst App = () => {\n    return (\n        <>\n            <AppState>\n                <HomePage />\n            </AppState>\n        </>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}